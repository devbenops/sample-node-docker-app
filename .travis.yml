sudo: required
env:
  global:
    - IMAGE_NAME=nithinbenny444/travis-test
    - IMAGE_TAG="$TRAVIS_BUILD_NUMBER"
    - MANIFEST_FOLDER="kubernetes"
    - MANIFEST_DEPLOYMENT_FILE_NAME="sample-nodeapp-k8s.yaml"
services:
  - docker
language: bash
language: node_js
node_js:
  - "node"

install:
  - npm install

before_script:
  - npm test

before_deploy:
  # create a docker image tag for develop branch
  - if [[ $TRAVIS_BRANCH == "develop" ]]; then export IMAGE_TAG=$TRAVIS_BUILD_NUMBER-dev; fi
  # create a docker image tag for release branch
  - if [[ $TRAVIS_BRANCH =~ release.* ]]; then export IMAGE_TAG=$TRAVIS_BUILD_NUMBER-rc; fi
  # create a docker image tag for Hotfix branch
  - if [[ $TRAVIS_BRANCH =~ hotfix.* ]]; then export IMAGE_TAG=$TRAVIS_BUILD_NUMBER-hotfix; fi
  # create a docker image tag for git tags
  - if [[ $TRAVIS_TAG ]]; then export IMAGE_TAG=$TRAVIS_TAG; fi

script:
  - docker build -t "$IMAGE_NAME" .
  - docker tag "$IMAGE_NAME" "$IMAGE_NAME:$IMAGE_TAG"
  - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
  - docker push "$IMAGE_NAME:$IMAGE_TAG"

after_script:

  - curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
  - sudo az aks install-cli
  - sudo az login --service-principal -u $SVC_PRINCIPAL_ID -p $SVC_PRINCIPAL_PASSWORD --tenant $TENANT_ID
  - sudo az aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $AKS_CLUSTER --admin

deploy:

  - oldTag=$(cat $MANIFEST_FOLDER/$MANIFEST_DEPLOYMENT_FILE_NAME | grep -P $IMAGE_NAME | awk -F ":" '{print $3}')
  - oldImage=$IMAG_ENAME:$oldTag
  - newImage=$IMAGENAME:$IMAGE_TAG
  - sed -i "s@$oldImage@$newImage@" $MANIFEST_DEPLOYMENT_FILE_NAME
  - sudo kubectl create -f $MANIFEST_FOLDER/sample-nodeapp-k8s.yaml

after_deploy:

  - echo $IMAGE_TAG
  - echo $TRAVIS_BUILD_NUMBER